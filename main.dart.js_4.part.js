// Generated by dart2js, the Dart to JavaScript compiler.
$dart_deferred_initializers.current=function(xm) {
var A=xm.A
var B=xm.B
var C=xm.C
var D=xm.D
var E=xm.E
var F=xm.F
var G=xm.G
var H=xm.H
var J=xm.J
var K=xm.K
var L=xm.L
var M=xm.M
var N=xm.N
var O=xm.O
var P=xm.P
var Q=xm.Q
var R=xm.R
var S=xm.S
var T=xm.T
var U=xm.U
var V=xm.V
var W=xm.W
var X=xm.X
var Y=xm.Y
var Z=xm.Z
var init=xm.init
var setupProgram=xm.setupProgram
var I=xm.I
var $=I.p
var dart = [ ["","",,E,{
"^":"",
yR:{
"^":"UR;y,Q,a,b,c,d,e,f,r,x",
goc:function(a){return"render"},
Zs:function(){var z=this.d
z.xJ("no-sticky",!1,"Disable the option below.",!1)
z.ye("sticky",!0,"H","Create no individual nodes for atoms for these types.",!0,"element,...")
z.uf("renderer","r",["dot","neato","twopi"],"neato","Name of the image rendering engine.\nIf `--format` is `txt` `graph-easy` will be used.","name")
z.P3("bg","transparent","Background color of the image.","color")
z.P3("fg","black","Foreground color of the image.","color")
z.P3("dpi","96","Dots per inch.","number")
z.pP("color",!0,"Colorize element symbols.")
z.pP("subscript",!0,"Print numbers in subscript.")
z.HA("format","f","txt","Target file format. (e.g. `png` or `jpg`)","type")
z.HA("output","o","<stdout>","Output directory.","path")
z.GZ("md5",["off","input","output"],"output","Use MD5 hash of input or output as file name.\nIf this options is turned `off` the files will be numbered consecutively.","mode")},
static:{ig:function(){var z=new E.yR(0,null,null,null,null,S.vG(null),null,P.L5(null,null,null,P.I,U.Y5),!0,C.dn)
z.wo()
z.Zs()
return z}}}}],]
setupProgram(dart)
$=arguments[1]
$.Tp=null
}
$dart_deferred_initializers["OyaanRWUmt66qDVxsMyLmYzOUKo="]=$dart_deferred_initializers.current
